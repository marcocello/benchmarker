suite:
  name: "Simple Q&A Benchmark"
  description: "Configuration for running simple Q&A benchmark with Azure OpenAI"

  # Test dataset
  dataset: "data/datasets/simple_qa.yaml"

  scenarios:
    - name: "qa_test_azure_gpt4o"
      strategy: "direct_prompt"
      provider: "azure_openai_gpt_4o_mini"
    
    - name: "qa_test_claude_sonnet"
      strategy: "direct_prompt"
      provider: "anthropic_claude_3_5"
    
    - name: "qa_test_huggingface"
      strategy: "direct_prompt"
      provider: "huggingface_mistral_small_3_1"
    
    - name: "qa_test_openrouter_gpt4o"
      strategy: "direct_prompt"
      provider: "openrouter_kimi"

  # Scoring configuration
  scoring:
    name: "scoring judge"
    strategy: "llm_judge"
    provider: "azure_openai_gpt_4o_mini"
    max_score: 10
    prompt: |
      You are evaluating the quality of an answer to a factual question.
      
      Question: {question}
      Expected Answer: {expected_answer}
      Actual Answer: {response}
      
      Rate the answer on a scale of 0-10 where:
      - 10: Perfect, accurate answer
      - 8-9: Mostly correct with minor issues
      - 6-7: Partially correct
      - 4-5: Some relevant information but mostly incorrect
      - 0-3: Completely wrong or irrelevant
      
      Respond with a JSON object containing 'score' (number) and 'explanation' (string).
    scoring:
      - "Factual accuracy"
      - "Completeness of answer"
      - "Clarity and coherence"

  # Output settings
  output:
    name: result

  providers:
    azure_openai_gpt_4o_mini:
      type: azure_openai
      endpoint: ${AZURE_OPENAI_ENDPOINT}
      api_version: ${AZURE_OPENAI_API_VERSION}
      api_key: ${AZURE_OPENAI_API_KEY}
      deployment: gpt-4o-mini
      model: gpt-4o-mini

    anthropic_claude_3_5:
      type: anthropic
      api_key: ${ANTHROPIC_API_KEY}
      model: claude-3-5-sonnet-20241022

    huggingface_mistral_small_3_1:
      type: huggingface
      api_key: ${HUGGINGFACE_API_KEY}
      model: mistralai/Mistral-Small-3.1-24B-Instruct-2503

    openrouter_kimi:
      type: openrouter
      api_key: ${OPENROUTER_API_KEY}
      model: moonshotai/kimi-k2